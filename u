
<Routes>    <Route path='/' element={<News pageSize = '5' country = "in" category = "science"/>} ></Route> </Routes>

async componentDidMount() {
     let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=57d8894d4edd444c95cbbd3a1955230e&page=1&pageSize=${this.props.pageSize}`
     this.setState ({loading:true})
     let data = await fetch(url);
     let parsedData = await data.json()
     console.log(parsedData);
     this.setState({articles: parsedData.articles,
        totalArticles: parsedData.totalResults,
       loading: false
       })
    this.updateNews();
  }

  
  handlePreviewClick = async () => {
    console.log("preview");
      let url = `https://newsapi.org/v2/Top-headlines?q=tesla&from=2023-06-18&sortBy=publishedAt&category=${this.props.category}&apiKey=57d8894d4edd444c95cbbd3a1955230e&page=${this.state.page - 1}&pageSize=${this.props.pageSize}`
    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=57d8894d4edd444c95cbbd3a1955230e&page=${this.state.page - 1}&pageSize=${this.props.pageSize}`
    this.setState ({loading:true})
    let data = await fetch(url);
    let parsedData = await data.json()
    console.log(parsedData);
    this.setState({
      page: this.state.page -1,
      articles: parsedData.articles,
      loading: false
    })
    this.setState({ page: this.state.page - 1 });
    this.updateNews();
  };
  handleNextClick = async () => {
    console.log("Next");
    (!(this.state.page +1 > Math.ceil(this.state.totalResults/20))){
     let url = `https://newsapi.org/v2/Top-headlines?q=tesla&from=2023-06-18&sortBy=publishedAt&category=${this.props.category}&apiKey=57d8894d4edd444c95cbbd3a1955230e&page=${this.state.page + 1}&pageSize=${this.props.pageSize}`
    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=57d8894d4edd444c95cbbd3a1955230e&page=${this.state.page + 1}&pageSize=${this.props.pageSize}`
    let data = await fetch(url);
   this.setState ({loading:true})
    et parsedData = await data.json()
    onsole.log(parsedData);
    his.setState({
    page: this.state.page +1,
    articles: parsedData.articles,
    loading: false
     })
     }
    this.setState({ page: this.state.page + 1 });
    this.updateNews();
  };


 let url  = `https://newsapi.org/v2/top-headlines?q=tesla&from=2023-06-18&sortBy=publishedAt&category=${this.props.category}&apiKey=57d8894d4edd444c95cbbd3a1955230e&page=1&pageSize=${this.props.pageSize}`  let data = await fetch(url);
let url = "https://newsapi.org/v2/everything?q=tesla&from=2023-06-16&sortBy=publishedAt&category=${this.props.category}&apiKey=57d8894d4edd444c95cbbd3a1955230e#"
  

App.js 


import React, { useState } from 'react'
import Navbar from './components/Navbar';
import News from './components/News';
import {BrowserRouter , Routes ,Route, } from "react-router-dom";
import LoadingBar from 'react-top-loading-bar';

const App = (props) => {
  pageSize = 5;
  const [progress, setProgress] = useState(0);
    return (
      <div>
        <BrowserRouter>
         <div>
            <Navbar/>
             <LoadingBar
               color='#f11946'
                 progress={progress}
         /> 
            <Routes>  <Route path='/' element={<News setProgress=   {setProgress}  pageSize = {pageSize} country = "in" category = "general" />} ></Route>  </Routes>
            <Routes> <Route path='/business' element={<News setProgress=   {setProgress}  pageSize = {pageSize} country = "in" category = "business"/>} ></Route> </Routes>
            <Routes> <Route path='/entertainment' element={<News setProgress=   {setProgress}  pageSize = {pageSize} country = "in" category = "entertainment"/>} ></Route> </Routes>
            <Routes> <Route path='/general' element={<News setProgress=   {setProgress}  pageSize = {pageSize} country = "in" category = "general"/>} ></Route> </Routes>
            <Routes> <Route path='/health' element={<News setProgress=   {setProgress}  pageSize = {pageSize} country = "in" category = "health"/>} ></Route> </Routes>
            <Routes> <Route path='/science' element={<News setProgress=   {setProgress}  pageSize = {pageSize} country = "in" category = "science"/>} ></Route> </Routes>
            <Routes> <Route path='/sports' element={<News setProgress=   {setProgress}  pageSize = {pageSize} country = "in" category = "sports"/>} ></Route> </Routes>
            <Routes> <Route path='/technology' element={<News setProgress=   {setProgress}  pageSize = {pageSize} country = "in" category = "technology"/>} ></Route> </Routes>  

         </div>
        </BrowserRouter>
      </div>
    )
}



      